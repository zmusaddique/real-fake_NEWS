# -*- coding: utf-8 -*-
"""R,F - News.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16NJqm_Y5XQDaTDGMNd_4n90xA0cYmiy9
"""

import numpy as np

import pandas as pd

import itertools

from sklearn.model_selection import train_test_split

from sklearn.feature_extraction.text import TfidfVectorizer

from sklearn.linear_model import PassiveAggressiveClassifier

from sklearn.metrics import accuracy_score, confusion_matrix

"""## Read the data

"""

df = pd.read_csv('news.csv')

# Get the shape and head
df.shape

df.head()

# Getting the labels from the DataFrame

labels = df.label
labels.head()

"""## Split the dataset into Training & Testing sets."""

x_train, x_test, y_train, y_test = train_test_split(df['text'], labels, test_size=0.2, random_state=7)

"""## Intialize a TF-IDF Vectorizer"""

tfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)

# Fit and transform train set

tfidf_train = tfidf_vectorizer.fit_transform(x_train)

# Transform test set
tfidf_test = tfidf_vectorizer.transform(x_test)

"""## Initialize a Passive Aggressive Classifier"""

pac = PassiveAggressiveClassifier(max_iter=50)

pac.fit(tfidf_train, y_train)

"""## Predict on the test set and calculate accuracy"""

y_pred = pac.predict(tfidf_test)

score = accuracy_score(y_test, y_pred)

print(f'Accuracy: {round(score*100, 2)}%')



"""## Build a confusion matrix"""

confusion_matrix(y_test, y_pred, labels=['FAKE', 'REAL'])

